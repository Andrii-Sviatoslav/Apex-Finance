rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {
function isSignedIn() {
return request.auth != null;
}

function isAdmin(appId) {
  return isSignedIn() &&
    exists(/databases/$(database)/documents/artifacts/$(appId)/users/$(request.auth.uid)) &&
    get(/databases/$(database)/documents/artifacts/$(appId)/users/$(request.auth.uid)).data.role == 'admin';
}

// Правила для основної колекції користувачів
match /artifacts/{appId}/users/{uid} {
  // Користувач може створити лише власний документ
  allow create: if isSignedIn() && request.auth.uid == uid;
  // Користувач може читати свій документ або документ, якщо він є адміном
  allow read: if isSignedIn() && (request.auth.uid == uid || isAdmin(appId));
  // Користувач може оновлювати/видаляти свій документ, або якщо він є адміном
  allow update, delete: if isSignedIn() && (request.auth.uid == uid || isAdmin(appId));
}

// Правила для приватних даних користувача (профіль, транзакції, бюджети тощо)
// Дозволяють читання та запис тільки власнику документа або адміну
match /artifacts/{appId}/users/{uid}/{collectionId}/{docId} {
  allow read, write: if isSignedIn() && (request.auth.uid == uid || isAdmin(appId));
}

// Правила для публічних профілів користувачів
match /artifacts/{appId}/public/data/user_profiles/{uid} {
  // Дозволити всім користувачам читати публічні профілі
  allow read: if isSignedIn();
  // Дозволити користувачеві створювати/оновлювати свій власний публічний профіль
  allow create, update: if isSignedIn() && request.auth.uid == uid;
  // Дозволити видалення лише адмінам
  allow delete: if isAdmin(appId);
}

// Загальні правила безпеки (відхилити будь-який інший доступ)
match /{document=**} {
  allow read, write: if false;
}

}
}